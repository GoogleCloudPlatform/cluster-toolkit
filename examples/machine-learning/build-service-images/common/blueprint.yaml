# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

blueprint_name: roll-common-image

deployment_groups:
- group: image-env
  modules:
  - id: image-net
    source: modules/network/vpc

  - id: build-script
    source: modules/scripts/startup-script
    settings:
      install_ansible: true
      docker:
        enabled: true
        world_writable: true
      runners:
      - $(vars.runner_install_cluster_health_scanner)
      - type: data  # see https://github.com/GoogleCloudPlatform/cluster-toolkit/pull/4152
        destination: /etc/apt/preferences.d/block-broken-nvidia-container
        content: |
          Package: nvidia-container-toolkit nvidia-container-toolkit-base libnvidia-container-tools libnvidia-container1
          Pin: version 1.17.7-1
          Pin-Priority: 100

      # The following holds NVIDIA software that was already installed on the
      # accelerator base image to be the same driver version. This reduces the
      # risk of a driver version mismatch.
      # Additional packages are held by:
      # https://github.com/GoogleCloudPlatform/slurm-gcp/blob/master/ansible/group_vars/os_ubuntu.yml
      - type: ansible-local
        destination: hold-nvidia-packages.yml
        content: |
          ---
          - name: Hold nvidia packages
            hosts: all
            become: true
            vars:
              nvidia_packages_to_hold:
              - libnvidia-cfg1-*-server
              - libnvidia-compute-*-server
              - libnvidia-nscq-*
              - nvidia-compute-utils-*-server
              - nvidia-fabricmanager-*
              - nvidia-utils-*-server
            tasks:
            - name: Hold nvidia packages
              ansible.builtin.command:
                argv:
                - apt-mark
                - hold
                - "{{ item }}"
              loop: "{{ nvidia_packages_to_hold }}"

      - type: data
        destination: /var/tmp/slurm_vars.json
        content: |
          {
            "reboot": false,
            "install_cuda": false,
            "install_gcsfuse": true,
            "install_lustre": false,
            "install_managed_lustre": true,
            "install_nvidia_repo": true,
            "install_ompi": true,
            "slurm_patch_files": ["task_prolog_epilog.patch"],
            "allow_kernel_upgrades": false,
            "monitoring_agent": "cloud-ops",
          }
      - $(vars.runner_install_slurm)
      - $(vars.runner_setup_hpc_vm_image_ulimits)
      - type: ansible-local
        destination: install_cuda_dcgm.yml
        content: |
          ---
          - name: Install CUDA & DCGM
            hosts: all
            become: true
            vars:
              distribution: "{{ ansible_distribution | lower }}{{ ansible_distribution_version | replace('.','') }}"
              cuda_repo_url: https://developer.download.nvidia.com/compute/cuda/repos/{{ distribution }}/x86_64/cuda-keyring_1.1-1_all.deb
              cuda_repo_filename: /tmp/{{ cuda_repo_url | basename }}
              enable_nvidia_dcgm: false
              nvidia_packages:
              - cuda-toolkit-12-8
              - datacenter-gpu-manager-4-cuda12
            tasks:
            - name: Download NVIDIA repository package
              ansible.builtin.get_url:
                url: "{{ cuda_repo_url }}"
                dest: "{{ cuda_repo_filename }}"
            - name: Install NVIDIA repository package
              ansible.builtin.apt:
                deb: "{{ cuda_repo_filename }}"
                state: present
            - name: Reduce NVIDIA repository priority
              ansible.builtin.copy:
                dest: /etc/apt/preferences.d/cuda-repository-pin-600
                mode: 0o0644
                owner: root
                group: root
                content: |
                  Package: nsight-compute
                  Pin: origin *ubuntu.com*
                  Pin-Priority: -1

                  Package: nsight-systems
                  Pin: origin *ubuntu.com*
                  Pin-Priority: -1

                  Package: *
                  Pin: release l=NVIDIA CUDA
                  Pin-Priority: 400
            - name: Install CUDA & DCGM
              ansible.builtin.apt:
                name: "{{ item }}"
                update_cache: true
              loop: "{{ nvidia_packages }}"
            - name: Create nvidia-persistenced override directory
              ansible.builtin.file:
                path: /etc/systemd/system/nvidia-persistenced.service.d
                state: directory
                owner: root
                group: root
                mode: 0o755
            - name: Configure nvidia-persistenced override
              ansible.builtin.copy:
                dest: /etc/systemd/system/nvidia-persistenced.service.d/persistence_mode.conf
                owner: root
                group: root
                mode: 0o644
                content: |
                  [Service]
                  ExecStart=
                  ExecStart=/usr/bin/nvidia-persistenced --user nvidia-persistenced --verbose
              notify: Reload SystemD
            handlers:
            - name: Reload SystemD
              ansible.builtin.systemd:
                daemon_reload: true
            post_tasks:
            - name: Disable NVIDIA DCGM by default (enable during boot on GPU nodes)
              ansible.builtin.service:
                name: nvidia-dcgm.service
                state: stopped
                enabled: false
            - name: Disable nvidia-persistenced SystemD unit (enable during boot on GPU nodes)
              ansible.builtin.service:
                name: nvidia-persistenced.service
                state: stopped
                enabled: false

      - type: ansible-local
        destination: install_ibverbs_utils.yml
        content: |
          ---
          - name: Install ibverbs-utils
            hosts: all
            become: true
            tasks:
            - name: Install Linux Modules Extra
              ansible.builtin.package:
                name:
                - ibverbs-utils
                state: present
      - type: data
        destination: /etc/enroot/enroot.conf
        content: |
          ENROOT_CONFIG_PATH     ${HOME}/.enroot


- group: image
  modules:
  - id: image
    source: modules/packer/custom-image
    kind: packer
    use:
    - image-net
    - build-script
    settings:
      disk_size: 100
      machine_type: n2-standard-16

      source_image: ubuntu-accelerator-2204-amd64-with-nvidia-570-v20250722
      source_image_project_id: [ubuntu-os-accelerator-images]

      image_family: $(vars.family)
      omit_external_ip: false

      # Unattended upgrades are disabled in this blueprint so that software does not
      # get updated daily and lead to potential instability in the cluster environment.
      #
      # Unattended Upgrades installs available security updates from the Ubuntu
      # security pocket for installed packages daily by default. Administrators who
      # disable this feature assume all responsibility for manually reviewing and
      # patching their systems against vulnerabilities.
      #
      # To enable unattended upgrades, please remove this section.
      metadata: $(vars.packer_metadata)
