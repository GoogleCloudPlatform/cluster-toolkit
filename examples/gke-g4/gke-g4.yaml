# Copyright 2025 "Google LLC"
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

blueprint_name: gke-g4

vars:
  # The following variables should be over-written in the deployment.yaml file.
  # Your GCP Project ID
  project_id:

  # This should be unique across all of your Cluster
  # Toolkit Deployments.
  deployment_name: gke-g4

  # The GCP Region used for this deployment.
  region:

  # The GCP Zone used for this deployment.
  zone:

  # The number of nodes to be created.
  static_node_count:

  # Cidr block containing the IP of the machine calling terraform.
  # The following line must be updated for this example to work.
  authorized_cidr:

  enable_numa_aware_scheduling: true
  system_node_pool_disk_size_gb: 100
  k8s_service_account_name: workload-identity-k8s-sa
  accelerator_type: nvidia-rtx-pro-6000
  accelerator_count: 8
  
  # numa_kubelet_config_path: $(ghpc_stage("./numa-kubelet-config.yaml"))

deployment_groups:
- group: primary
  modules:
  - id: gke-g4-net-0
    source: modules/network/vpc
    settings:
      network_name: $(vars.deployment_name)-net-0
      subnetworks:
      - subnet_name: $(vars.deployment_name)-sub-0
        subnet_region: $(vars.region)
        subnet_ip: 192.168.0.0/18
      secondary_ranges_list:
      - subnetwork_name: $(vars.deployment_name)-sub-0
        ranges:
        - range_name: pods
          ip_cidr_range: 10.4.0.0/14
        - range_name: services
          ip_cidr_range: 10.0.32.0/20
      firewall_rules:
      - name: $(vars.deployment_name)-internal-0
        ranges: [192.168.0.0/16]
        allow:
        - protocol: tcp
          ports: ["0-65535"]
        - protocol: udp
          ports: ["0-65535"]
        - protocol: icmp

  - id: gke-g4-net-1
    source: modules/network/vpc
    settings:
      network_name: $(vars.deployment_name)-net-1
      subnetworks:
      - subnet_name: $(vars.deployment_name)-sub-1
        subnet_region: $(vars.region)
        subnet_ip: 192.168.64.0/18
      firewall_rules:
      - name: $(vars.deployment_name)-internal-1
        ranges: [192.168.0.0/16]
        allow:
        - protocol: tcp
          ports: ["0-65535"]
        - protocol: udp
          ports: ["0-65535"]
        - protocol: icmp

  - id: node_pool_service_account
    source: community/modules/project/service-account
    settings:
      name: gke-np-sa
      project_roles:
      - logging.logWriter
      - monitoring.metricWriter
      - monitoring.viewer
      - stackdriver.resourceMetadata.writer
      - storage.objectViewer
      - artifactregistry.reader

  - id: workload_service_account
    source: community/modules/project/service-account
    settings:
      name: gke-wl-sa
      project_roles:
      - logging.logWriter
      - monitoring.metricWriter
      - monitoring.viewer
      - stackdriver.resourceMetadata.writer
      - storage.objectAdmin
      - artifactregistry.reader

  - id: g4-cluster
    source: modules/scheduler/gke-cluster
    use: [gke-g4-net-0, workload_service_account]
    settings:
      system_node_pool_machine_type: "e2-standard-16"
      system_node_pool_disk_size_gb: $(vars.system_node_pool_disk_size_gb)
      system_node_pool_taints: []
      enable_dcgm_monitoring: true
      enable_private_endpoint: false # Allows access from authorized public IPs
      configure_workload_identity_sa: true
      master_authorized_networks:
      - cidr_block: $(vars.authorized_cidr) # Allows your machine to run the kubectl command. Required for multi network setup.
        display_name: "kubectl-access-network"
      additional_networks:
        $(concat(
          [{
            network=gke-g4-net-1.network_name,
            subnetwork=gke-g4-net-1.subnetwork_name,
            subnetwork_project=vars.project_id,
            nic_type="GVNIC",
            queue_count=null,
            network_ip=null,
            stack_type=null,
            access_config=[{nat_ip=null, public_ptr_domain_name=null, network_tier=null}],
            ipv6_access_config=[],
            alias_ip_range=[]
          }]
        ))
      # Cluster versions cannot be updated through the toolkit after creation
      # Please manage cluster version from the Google Cloud Console directly
      version_prefix: "1.32.6-gke.1096000"
      release_channel: RAPID
      maintenance_exclusions:
      - name: no-minor-or-node-upgrades-indefinite
        start_time: "2025-08-01T00:00:00Z"
        end_time: "2026-04-10T00:00:00Z"
        exclusion_scope: NO_MINOR_OR_NODE_UPGRADES
    outputs: [instructions]

  - id: g4-pool
    source: modules/compute/gke-node-pool
    use: [g4-cluster, node_pool_service_account]
    settings:
      machine_type: g4-standard-384
      auto_upgrade: true
      zones: [$(vars.zone)]
      static_node_count: $(vars.static_node_count)
      guest_accelerator:
      - type: $(vars.accelerator_type)
        count: $(vars.accelerator_count)
        gpu_driver_installation_config:
          gpu_driver_version: LATEST
      additional_networks:
        $(concat(
          [{
            network=gke-g4-net-1.network_name,
            subnetwork=gke-g4-net-1.subnetwork_name,
            subnetwork_project=vars.project_id,
            nic_type="GVNIC",
            queue_count=null,
            network_ip=null,
            stack_type=null,
            access_config=[{nat_ip=null, public_ptr_domain_name=null, network_tier=null}],
            ipv6_access_config=[],
            alias_ip_range=[]
          }]
        ))
    outputs: [instructions]

  # Install Kueue and Jobset
  - id: workload-manager-install
    source: modules/management/kubectl-apply
    use: [g4-cluster]
    settings:
      kueue:
        install: true
      jobset:
        install: true
      # apply_manifests:
      # - source: $(vars.numa_kubelet_config_path)

  - id: nvidia_smi_job_template
    source: modules/compute/gke-job-template
    use: [g4-pool]
    settings:
      image: nvidia/cuda:12.9.1-runtime-ubuntu24.04
      command:
      - nvidia-smi
      node_count: $(vars.static_node_count)
      name: run-nvidia-smi
      k8s_service_account_name: $(vars.k8s_service_account_name)
    outputs: [instructions]