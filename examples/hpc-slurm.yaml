# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

blueprint_name: hpc-slurm

vars:
  project_id:  ## Set GCP Project ID Here ##
  deployment_name: hpc-small
  region: us-central1
  zone: us-central1-a
  debug_nodes: 4
  compute_nodes: 200
  h3_nodes: 13
  num_parallel_jobs: 1 # could be $(vars.compute_nodes)

# Documentation for each of the modules used below can be found at
# https://github.com/GoogleCloudPlatform/hpc-toolkit/blob/main/modules/README.md

deployment_groups:
- group: primary
  modules:
  # Source is an embedded resource, denoted by "resources/*" without ./, ../, /
  # as a prefix. To refer to a local resource, prefix with ./, ../ or /
  # Example - ./resources/network/vpc
  - id: network1
    source: modules/network/vpc

  - id: homefs
    source: modules/file-system/filestore
    use: [network1]
    settings:
      local_mount: /home

  - id: debug_node_group
    source: community/modules/compute/schedmd-slurm-gcp-v5-node-group
    settings:
      node_count_dynamic_max: $(vars.debug_nodes)
      machine_type: n2-standard-2

  - id: debug_partition
    source: community/modules/compute/schedmd-slurm-gcp-v5-partition
    use:
    - network1
    - homefs
    - debug_node_group
    settings:
      partition_name: debug
      exclusive: false # allows nodes to stay up after jobs are done
      enable_placement: false # the default is: true
      is_default: true

  - id: compute_node_group
    source: community/modules/compute/schedmd-slurm-gcp-v5-node-group
    settings:
      node_count_dynamic_max: $(vars.compute_nodes)

  - id: compute_partition
    source: community/modules/compute/schedmd-slurm-gcp-v5-partition
    use:
    - network1
    - homefs
    - compute_node_group
    settings:
      partition_name: compute

  - id: h3_node_group
    source: community/modules/compute/schedmd-slurm-gcp-v5-node-group
    settings:
      node_count_dynamic_max: $(vars.h3_nodes)
      machine_type: h3-standard-88
      # H3 does not support pd-ssd and pd-standard
      # https://cloud.google.com/compute/docs/compute-optimized-machines#h3_disks
      disk_type: pd-balanced

  - id: h3_partition
    source: community/modules/compute/schedmd-slurm-gcp-v5-partition
    use:
    - network1
    - homefs
    - h3_node_group
    settings:
      partition_name: h3

  - id: slurm_controller
    source: community/modules/scheduler/schedmd-slurm-gcp-v5-controller
    use:
    - network1
    - debug_partition
    - compute_partition
    - h3_partition
    - homefs
    settings:
      disable_controller_public_ips: false

  - id: slurm_login
    source: community/modules/scheduler/schedmd-slurm-gcp-v5-login
    use:
    - network1
    - slurm_controller
    settings:
      machine_type: n2-standard-4
      disable_login_public_ips: false

validators:
- validator: test_resource_requirements
  inputs:
    requirements:
    # Storage
    - metric: file.googleapis.com/standard-storage-gb-per-region # Basic HDD (Standard)
      required: 1024
    - metric: compute.googleapis.com/ssd_total_storage # Persistent Disk SSD
      required: 100500 # actually need 50, exaturated for showing "usage"
    - metric: compute.googleapis.com/disks_total_storage # Persistent Disk Standard
      required: (( 50 + 50 * (var.debug_nodes + var.compute_nodes) ))
    # CPUs
    - metric: compute.googleapis.com/c2_cpus
      required: (( 4 + 60 * var.compute_nodes ))
    - metric: compute.googleapis.com/cpus_per_vm_family
      dimensions:
        vm_family : H3
        region: $(vars.region) # TODO: to be populated automatically
      required: (( 88 * var.h3_nodes ))
    # Others
    - metric: compute.googleapis.com/affinity_groups
      required: $(vars.num_parallel_jobs)
    - metric: compute.googleapis.com/resource_policies
      required: $(vars.num_parallel_jobs)
    
    
