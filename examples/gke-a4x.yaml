# Copyright 2024 "Google LLC"
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

blueprint_name: gke-a4x

vars:
  project_id: hpc-toolkit-gsc
  deployment_name: gke-a4x
  region: europe-west1
  zone: europe-west1-b
  # Cidr block containing the IP of the machine calling terraform.
  # The following line must be updated for this example to work.
  authorized_cidr: 0.0.0.0/0
  static_node_count: 2
  system_node_pool_disk_size_gb: 200
  a4x_node_pool_disk_size_gb: 100
  k8s_service_account_name: workload-identity-k8s-sa

deployment_groups:
- group: primary
  modules:
  - id: gke-a4x-net-0
    source: modules/network/vpc
    settings:
      network_name: $(vars.deployment_name)-net-0
      subnetworks:
      - subnet_name: $(vars.deployment_name)-sub-0
        subnet_region: $(vars.region)
        subnet_ip: 192.168.0.0/18
      secondary_ranges_list:
      - subnetwork_name: $(vars.deployment_name)-sub-0
        ranges:
        - range_name: pods
          ip_cidr_range: 10.4.0.0/14
        - range_name: services
          ip_cidr_range: 10.0.32.0/20
      firewall_rules:
      - name: $(vars.deployment_name)-internal-0
        ranges: [192.168.0.0/16]
        allow:
        - protocol: tcp
          ports: ["0-65535"]
        - protocol: udp
          ports: ["0-65535"]
        - protocol: icmp

  - id: gke-a4x-net-1
    source: modules/network/vpc
    settings:
      network_name: $(vars.deployment_name)-net-1
      subnetworks:
      - subnet_name: $(vars.deployment_name)-sub-1
        subnet_region: $(vars.region)
        subnet_ip: 192.168.64.0/18
      firewall_rules:
      - name: $(vars.deployment_name)-internal-1
        ranges: [192.168.0.0/16]
        allow:
        - protocol: tcp
          ports: ["0-65535"]
        - protocol: udp
          ports: ["0-65535"]
        - protocol: icmp

  - id: gke-a4x-rdma-net
    source: modules/network/gpu-rdma-vpc
    settings:
      network_name: $(vars.deployment_name)-rdma-net
      network_profile: https://www.googleapis.com/compute/beta/projects/$(vars.project_id)/global/networkProfiles/$(vars.zone)-vpc-roce
      network_routing_mode: REGIONAL
      subnetworks_template:
        name_prefix: $(vars.deployment_name)-rdma-sub
        count: 4 # This is 8 for A3 Ultra and A4
        ip_range: 192.168.128.0/18
        region: $(vars.region)

  - id: node_pool_service_account
    source: community/modules/project/service-account
    settings:
      name: gke-np-sa
      project_roles:
      - logging.logWriter
      - monitoring.metricWriter
      - monitoring.viewer
      - stackdriver.resourceMetadata.writer
      - storage.objectViewer
      - artifactregistry.reader

  - id: workload_service_account
    source: community/modules/project/service-account
    settings:
      name: gke-wl-sa
      project_roles:
      - logging.logWriter
      - monitoring.metricWriter
      - monitoring.viewer
      - stackdriver.resourceMetadata.writer
      - storage.objectAdmin
      - artifactregistry.reader

  - id: a4x-cluster
    source: modules/scheduler/gke-cluster
    use: [gke-a4x-net-0, workload_service_account]
    settings:
      system_node_pool_machine_type: "e2-standard-16"
      system_node_pool_disk_size_gb: $(vars.system_node_pool_disk_size_gb)
      system_node_pool_taints: []
      enable_dcgm_monitoring: true
      enable_gcsfuse_csi: true
      enable_private_endpoint: false # Allows access from authorized public IPs
      configure_workload_identity_sa: true
      k8s_service_account_name: $(vars.k8s_service_account_name)
      master_authorized_networks:
      - cidr_block: $(vars.authorized_cidr) # Allows your machine to run the kubectl command. Required for multi network setup.
        display_name: "kubectl-access-network"
      version_prefix: "1.31."
      release_channel: RAPID
      maintenance_exclusions:
      - name: no-minor-or-node-upgrades-indefinite
        start_time: "2024-12-01T00:00:00Z"
        end_time: "2025-12-22T00:00:00Z"
        exclusion_scope: NO_MINOR_OR_NODE_UPGRADES
    outputs: [instructions]

  - id: a4x-pool
    source: modules/compute/gke-node-pool
    use: [a4x-cluster, node_pool_service_account]
    settings:
      machine_type: c4a-standard-8
      auto_upgrade: true
      zones: [$(vars.zone)]
      disk_size_gb: $(vars.a4x_node_pool_disk_size_gb)
      static_node_count: $(vars.static_node_count)
    outputs: [instructions]

  - id: job-template
    source: modules/compute/gke-job-template
    use: [a4x-pool]
    settings:
      image: nvidia/cuda:12.8.0-runtime-ubuntu20.04
      command:
      - nvidia-smi
      node_count: 2
      name: run-nvidia-smi
      k8s_service_account_name: $(vars.k8s_service_account_name)
      node_selectors:
      - key: kubernetes.io/arch
        value: arm64
    outputs: [instructions]
