# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

blueprint_name: ml-gke

vars:
  project_id:  ## Set GCP Project ID Here ##
  deployment_name: ml-01
  region: asia-southeast1
  zones:
  - asia-southeast1-b  # g2 machine has better availability in this zone

  # Cidr block containing the IP of the machine calling terraform.
  # The following line must be updated for this example to work.
  authorized_cidr: <your-ip-address>/32

deployment_groups:
- group: primary
  modules:
  - id: network1
    source: modules/network/vpc
    settings:
      subnetwork_name: gke-subnet
      secondary_ranges:
        gke-subnet:
        - range_name: pods
          ip_cidr_range: 10.4.0.0/14
        - range_name: services
          ip_cidr_range: 10.0.32.0/20

  - id: gke_service_account
    source: community/modules/project/service-account
    settings:
      name: gke-sa
      project_roles:
      - logging.logWriter
      - monitoring.metricWriter
      - monitoring.viewer
      - stackdriver.resourceMetadata.writer
      - storage.objectViewer
      - artifactregistry.reader

  - id: gke_cluster
    source: modules/scheduler/gke-cluster
    use: [network1, gke_service_account]
    settings:
      enable_private_endpoint: false  # Allows for access from authorized public IPs
      master_authorized_networks:
      - display_name: deployment-machine
        cidr_block: $(vars.authorized_cidr)
      configure_workload_identity_sa: true
    outputs: [instructions]

  - id: g2_pool
    source: modules/compute/gke-node-pool
    use: [gke_cluster, gke_service_account]
    settings:
      disk_type: pd-balanced
      machine_type: g2-standard-4

  - id: job_template
    source: modules/compute/gke-job-template
    use: [g2_pool]
    settings:
      image: nvidia/cuda:11.0.3-runtime-ubuntu20.04
      command:
      - nvidia-smi
      node_count: 1
    outputs: [instructions]
