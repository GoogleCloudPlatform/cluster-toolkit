# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

# Check if this role should run
- name: Set current role for lock manager check
  ansible.builtin.set_fact:
    current_role: "vnc"

- name: Check if vnc role should run
  ansible.builtin.import_role:
    name: lock_manager
    tasks_from: check_lock
  register: lock_check_result

- name: Set role_should_run from lock check result
  ansible.builtin.set_fact:
    role_should_run: "{{ lock_check_result.ansible_facts.role_should_run | default(true) }}"

# Skip all tasks if role should not run
- name: Skip vnc tasks if role should not run
  ansible.builtin.debug:
    msg: "Skipping vnc role - already completed or not needed"
  when: not role_should_run

- name: "Install TigerVNC"
  include_tasks: tigervnc.yaml
  when: 
    - vnc_flavor | lower == 'tigervnc'
    - role_should_run

- name: "Install TightVNC"
  include_tasks: tightvnc.yaml
  when: 
    - vnc_flavor | lower == 'tightvnc'
    - role_should_run

# Mark role as completed
- name: Set current role for lock manager completion
  ansible.builtin.set_fact:
    current_role: "vnc"
    role_completed: true
  when: role_should_run

- name: Mark vnc role as completed
  ansible.builtin.import_role:
    name: lock_manager
    tasks_from: create_lock
  when: role_should_run
