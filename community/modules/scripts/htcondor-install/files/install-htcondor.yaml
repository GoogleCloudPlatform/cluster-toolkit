# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: ensure HTCondor is installed
  hosts: all
  vars:
    block_metadata_server: true
  become: true
  tasks:
  - name: setup HTCondor yum repository
    ansible.builtin.yum:
      name:
      - epel-release
      - https://research.cs.wisc.edu/htcondor/repo/9.x/htcondor-release-current.el7.noarch.rpm
  - name: install HTCondor
    ansible.builtin.yum:
      name: condor
      state: latest
  - name: ensure token directory
    ansible.builtin.file:
      path: /etc/condor/tokens.d
      mode: 0700
      owner: root
      group: root
      recurse: true
  - name: Ensure HTCondor is stopped and disabled. Must configure at boot!
    ansible.builtin.service:
      name: condor
      enabled: false
      state: stopped
  - name: Ensure that firewall is started and enabled
    ansible.builtin.systemd:
      name: firewalld
      enabled: true
      state: started
      masked: no
  - name: Ensure that only root and condor users can access service account
    when: block_metadata_server | bool # allows string to be passed at CLI
    ansible.builtin.shell: |
      firewall-cmd --direct --permanent --add-rule ipv4 filter OUTPUT_direct 1 \
          -m owner --uid-owner root -p tcp -d metadata.google.internal --dport 80 -j ACCEPT
      firewall-cmd --direct --permanent --add-rule ipv4 filter OUTPUT_direct 2 \
          -m owner --uid-owner condor -p tcp -d metadata.google.internal --dport 80 -j ACCEPT
      firewall-cmd --direct --permanent --add-rule ipv4 filter OUTPUT_direct 3 \
          -p tcp -d metadata.google.internal --dport 80 -j DROP
      firewall-cmd --direct --permanent --add-rule ipv4 filter OUTPUT_direct 4 \
          -p tcp -d metadata.google.internal --dport 8080 -j DROP
      firewall-cmd --permanent --zone=public --add-port=9618/tcp
      firewall-cmd --reload
