- source: community/modules/compute/schedmd-slurm-gcp-v6-partition
  kind: terraform
  id: {{ part_id }}
  use:
  - {{ part_id }}-nodeset
  settings:
    partition_name: {{ part.name }}
    exclusive: {{ part.exclusive }}
    resume_timeout: 500

- source: community/modules/compute/schedmd-slurm-gcp-v6-nodeset
  id: {{ part_id }}-nodeset
  use:
{{ uses_str }}
  settings:
    bandwidth_tier: {% if part.enable_tier1_networking %}tier_1_enabled{% else %}platform_default{% endif %}
    subnetwork_self_link: "projects/{{ cluster.project_id }}/regions/{{ cluster.cloud_region }}/subnetworks/{{ cluster.subnet.cloud_id }}"
    {% if not part.enable_hyperthreads %}
    advanced_machine_features:
      threads_per_core: 1
    {% endif %}
    enable_placement: {{ part.enable_placement }}
    machine_type: {{ part.machine_type }}
    {% if part.reservation_name %}
    reservation_name: "projects/{{ cluster.project_id }}/reservations/{{ part.reservation_name }}"
    {% endif %}
    node_count_dynamic_max: {{ part.dynamic_node_count }}
    node_count_static: {{ part.static_node_count }}
    disk_size_gb: {{ part.boot_disk_size }}
    disk_type: {{ part.boot_disk_type }}
    instance_image:
    {% if part.image %}
      family: {% if part.image.source_image_family == "Imported" %}{{ part.image.family }}{% else %}image-{{ part.image.family }}{% endif %}
      project: {{ cluster.project_id }}
    {% else %}
      family: slurm-gcp-6-9-hpc-rocky-linux-8
      project: schedmd-slurm-public
    {% endif %}
    {% if part.additional_disk_count > 0 %}
    additional_disks:
      {% for disk_index in disk_range %}
      - device_name: disk{{ disk_index }}
        disk_name: null
        disk_size_gb: {{ part.additional_disk_size }}
        disk_type: {{ part.additional_disk_type }}
        disk_labels: {}
        auto_delete: {{ part.additional_disk_auto_delete }}
        boot: false
      {% endfor %}
    {% endif %}
    {% if part.GPU_per_node > 0 %}
    guest_accelerator:
      - type: {{ part.GPU_type }}
        count: {{ part.GPU_per_node }}
    {% endif %}
    startup_script: |
      echo "******************************************** CALLING COMPUTE STARTUP"
      #!/bin/bash
      gsutil cp gs://{{ startup_bucket }}/clusters/{{ cluster.id }}/bootstrap_compute.sh - | bash
