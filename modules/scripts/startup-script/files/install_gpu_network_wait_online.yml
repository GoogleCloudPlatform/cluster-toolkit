# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Install network wait service for A3/A4 variants
  hosts: all
  become: true
  tasks:

  - name: Create universal SystemD service for GPU networking delay
    when: ansible_os_family == "Debian"
    ansible.builtin.copy:
      dest: /etc/systemd/system/delay-gpu-network.service
      owner: root
      group: root
      mode: "0644"
      content: |
        [Unit]
        Description=Delay boot on multi-NIC VMs until networks are routable
        After=network-online.target
        Wants=network-online.target
        Before=google-startup-scripts.service

        [Service]
        # This condition checks if the machine type is one of the supported A3/A4 variants.
        # The service will only run if the machine type matches.
        ExecCondition=/bin/bash -c "/usr/bin/curl -s -H 'Metadata-Flavor: Google' http://metadata.google.internal/computeMetadata/v1/instance/machine-type | grep -qE '(/a3-highgpu-8g|/a3-megagpu-8g|/a3-ultragpu-8g|/a4-highgpu-8g|/a4x-highgpu-4g)$'"
        ExecStart=/usr/lib/systemd/systemd-networkd-wait-online -o routable --timeout=180
        ExecStartPost=/bin/sleep 30

        [Install]
        WantedBy=multi-user.target
    notify:
    - Reload SystemD

  - name: Enable universal GPU network delay service
    when: ansible_os_family == "Debian"
    ansible.builtin.systemd_service:
      name: delay-gpu-network.service
      enabled: true

  handlers:
  - name: Reload SystemD
    ansible.builtin.systemd:
      daemon_reload: true
