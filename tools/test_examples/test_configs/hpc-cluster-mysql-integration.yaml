# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# name leaking?!
blueprint_name: proteus
# README under proteus
# copy over the example folder in main
# fork the develop branch, use feature branch
# resource folder, (resource role / service)

vars:
  project_id: test_project
  deployment_name: test-deployment
  region: us-central1
  zone: us-central1-a

terraform_backend_defaults:
  type: gcs
  configuration:
    bucket: dev-hpc-toolkit-tf-state

resource_groups:
- group: primary
  resources:
  - source: ./resources/project/service-enablement
    kind: terraform
    id: services-api
    settings:
      gcp_service_list: [
      "file.googleapis.com",
      "compute.googleapis.com",
      "container.googleapis.com",
      "cloudresourcemanager.googleapis.com",
      "billingbudgets.googleapis.com",
      "sourcerepo.googleapis.com",
      "logging.googleapis.com",
      "monitoring.googleapis.com",
      "bigquery.googleapis.com",
      "sqladmin.googleapis.com",
      "servicenetworking.googleapis.com",
      "iap.googleapis.com"
    ]
  - source: ./resources/storage/gcs
    kind: terraform
    id: cloud-storage

  - source: ./resources/alerts/alerts_and_monitoring
    kind: terraform
    id: alerts_and_monitoring
    settings:
      notification_email_addresses: ['test@hcl.com']
  
- group: secondary
  resources:
  - source: ./resources/network/vpc
    kind: terraform
    id: network1

  # - source: ./resources/file-system/filestore
  #   kind: terraform
  #   id: homefs
  #   settings:
  #     local_mount: /home
  #     network_name: $(network1.network_name)

  - source: ./resources/file-system/nfs-server
    kind: terraform
    id: homefs
    settings:
      # local_mount: /home update this in the resource file later
      network_name: $(network1.network_name)

  - source: ./resources/database/cloudsql
    kind: terraform
    id: slurm-sql
    settings:
      sql_instance_name: slurm-sql6-demo
      tier: "db-f1-micro"
      network: $(network1.network_name)
      nat_ips: $(network1.nat_ips)

  - source: ./resources/third-party/compute/SchedMD-slurm-on-gcp-partition
    kind: terraform
    id: compute-partition
    settings:
      partition_name: compute
      max_node_count: 20
      subnetwork_name: ((module.network1.primary_subnetwork.name))
      machine_type: n2-standard-2
      network_storage:
      - $(homefs.network_storage)

  - source: ./resources/third-party/scheduler/SchedMD-slurm-on-gcp-controller
    kind: terraform
    id: slurm-controller
    settings:
      subnetwork_name: ((module.network1.primary_subnetwork.name))
      login_node_count: 1
      network_storage:
      - $(homefs.network_storage)
      partitions:
      - $(compute-partition.partition)
      cloudsql: ((module.slurm-sql.cloudsql))
      disable_compute_public_ips: true
      disable_controller_public_ips: true
      

  - source: ./resources/third-party/scheduler/SchedMD-slurm-on-gcp-login-node
    kind: terraform
    id: slurm-login
    settings:
      subnetwork_name: ((module.network1.primary_subnetwork.name))
      network_storage:
      - $(homefs.network_storage)
      controller_name: $(slurm-controller.controller_node_name)
      disable_login_public_ips: true





