# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
blueprint_name: htcondor-pool

vars:
  project_id:  ## Set GCP Project ID Here ##
  deployment_name: htcondor-001
  region: us-central1
  zone: us-central1-c
  image_family: htcondor-9x
  network_name: htcondor-pool
  subnetwork_name: htcondor-pool-usc1

deployment_groups:
- group: htcondor-env
  modules:
  - source: modules/network/vpc
    kind: terraform
    id: network1
    outputs:
    - network_name
  - source: community/modules/scripts/htcondor-install
    kind: terraform
    id: htcondor_install
  - source: community/modules/project/service-enablement
    kind: terraform
    id: htcondor_services
    use:
    - htcondor_install
  - source: modules/scripts/startup-script
    kind: terraform
    id: htcondor_install_scripts
    settings:
      runners:
      - type: shell
        source: modules/startup-script/examples/install_ansible.sh
        destination: install_ansible.sh
      - $(htcondor_install.install_htcondor_runner)
    outputs:
    - startup_script
- group: packer
  modules:
  - source: modules/packer/custom-image
    kind: packer
    id: custom-image
- group: pool
  modules:
  - source: modules/network/pre-existing-vpc
    kind: terraform
    id: cluster_network
  - source: community/modules/scheduler/htcondor-configure
    kind: terraform
    id: htcondor_configure
  - source: modules/scripts/startup-script
    kind: terraform
    id: htcondor_configure_central_manager
    settings:
      runners: $(htcondor_configure.central_manager_runners)
  - source: modules/scripts/startup-script
    kind: terraform
    id: htcondor_configure_access_point
    settings:
      runners: $(htcondor_configure.access_point_runners)
  - source: modules/compute/vm-instance
    kind: terraform
    id: htcondor_cm
    use:
    - cluster_network
    - htcondor_configure_central_manager
    settings:
      name_prefix: central-manager
      machine_type: c2-standard-4
      disable_public_ips: true
      instance_image:
        family: ((var.image_family))
        project: ((var.project_id))
      service_account:
        email: ((module.htcondor_configure.central_manager_service_account))
        scopes:
        - cloud-platform
    outputs:
    - internal_ip
  - source: modules/compute/vm-instance
    kind: terraform
    id: htcondor_access
    use:
    - cluster_network
    - htcondor_configure_access_point
    settings:
      name_prefix: access-point
      machine_type: c2-standard-4
      metadata:
        central-manager: ((module.htcondor_cm.internal_ip[0]))
      instance_image:
        family: ((var.image_family))
        project: ((var.project_id))
      service_account:
        email: ((module.htcondor_configure.access_point_service_account))
        scopes:
        - cloud-platform
    outputs:
    - external_ip
