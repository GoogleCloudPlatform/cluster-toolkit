# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

blueprint_name: igc
ghpc_version: golden
validators:
  - validator: test_project_exists
    skip: true
  - validator: test_apis_enabled
    skip: true
  - validator: test_region_exists
    skip: true
  - validator: test_zone_exists
    skip: true
  - validator: test_zone_in_region
    skip: true
vars:
  deployment_name: golden_copy_deployment
  labels:
    ghpc_blueprint: igc
    ghpc_deployment: golden_copy_deployment
  project_id: invalid-project
  region: us-east4
  zone: us-east4-c
deployment_groups:
  - group: zero
    modules:
      - source: modules/network/vpc
        kind: terraform
        id: network0
        outputs:
          - name: subnetwork_name
            description: Automatically-generated output exported for use by later deployment groups
            sensitive: true
        settings:
          deployment_name: ((var.deployment_name ))
          enable_iap_rdp_ingress: true
          enable_iap_winrm_ingress: true
          project_id: ((var.project_id ))
          region: ((var.region ))
      - source: modules/file-system/filestore
        kind: terraform
        id: homefs
        use:
          - network0
        settings:
          deployment_name: ((var.deployment_name ))
          labels: ((var.labels ))
          local_mount: /home
          network_id: ((module.network0.network_id ))
          project_id: ((var.project_id ))
          region: ((var.region ))
          zone: ((var.zone ))
      - source: modules/file-system/filestore
        kind: terraform
        id: projectsfs
        use:
          - network0
        settings:
          deployment_name: ((var.deployment_name ))
          labels: ((var.labels ))
          local_mount: /projects
          network_id: ((module.network0.network_id ))
          project_id: ((var.project_id ))
          region: ((var.region ))
          zone: ((var.zone ))
      - source: modules/scripts/startup-script
        kind: terraform
        id: script
        outputs:
          - name: startup_script
            description: Automatically-generated output exported for use by later deployment groups
            sensitive: true
        settings:
          deployment_name: ((var.deployment_name ))
          labels: ((var.labels ))
          project_id: ((var.project_id ))
          region: ((var.region ))
          runners:
            - content: |
                #!/bin/bash
                echo "Hello, World!"
              destination: hello.sh
              type: shell
      - source: community/modules/scripts/windows-startup-script
        kind: terraform
        id: windows_startup
        outputs:
          - name: windows_startup_ps1
            description: Automatically-generated output exported for use by later deployment groups
            sensitive: true
        settings:
          install_nvidia_driver: true
  - group: one
    modules:
      - source: modules/packer/custom-image
        kind: packer
        id: image
        use:
          - network0
          - script
          - windows_startup
        settings:
          deployment_name: ((var.deployment_name ))
          labels: ((var.labels ))
          project_id: ((var.project_id ))
          startup_script: ((module.script.startup_script))
          subnetwork_name: ((module.network0.subnetwork_name))
          windows_startup_ps1: ((flatten([module.windows_startup.windows_startup_ps1])))
          zone: ((var.zone ))
