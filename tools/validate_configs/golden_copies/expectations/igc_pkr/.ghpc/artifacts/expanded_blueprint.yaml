# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

blueprint_name: igc
ghpc_version: golden
validators:
  - validator: test_project_exists
    inputs: {}
    skip: true
  - validator: test_apis_enabled
    inputs: {}
    skip: true
  - validator: test_region_exists
    inputs: {}
    skip: true
  - validator: test_zone_exists
    inputs: {}
    skip: true
  - validator: test_zone_in_region
    inputs: {}
    skip: true
  - validator: test_module_not_used
    inputs: {}
    skip: false
  - validator: test_deployment_variable_not_used
    inputs: {}
    skip: false
vars:
  deployment_name: golden_copy_deployment
  labels:
    ghpc_blueprint: igc
    ghpc_deployment: golden_copy_deployment
  project_id: invalid-project
  region: us-east4
  zone: us-east4-c
deployment_groups:
  - group: zero
    terraform_backend:
      type: ""
      configuration: {}
    modules:
      - source: modules/network/vpc
        kind: terraform
        id: network0
        use: []
        wrapsettingswith: {}
        outputs:
          - name: subnetwork_name
            description: Automatically-generated output exported for use by later deployment groups
            sensitive: true
        settings:
          deployment_name: ((var.deployment_name ))
          project_id: ((var.project_id ))
          region: ((var.region ))
        required_apis:
          $(vars.project_id):
            - compute.googleapis.com
      - source: modules/file-system/filestore
        kind: terraform
        id: homefs
        use:
          - network0
        wrapsettingswith:
          labels:
            - merge(
            - )
        settings:
          deployment_name: ((var.deployment_name ))
          labels:
            - ((var.labels ))
            - ghpc_role: file-system
          local_mount: /home
          network_id: ((module.network0.network_id ))
          project_id: ((var.project_id ))
          region: ((var.region ))
          zone: ((var.zone ))
        required_apis:
          $(vars.project_id):
            - file.googleapis.com
      - source: modules/file-system/filestore
        kind: terraform
        id: projectsfs
        use:
          - network0
        wrapsettingswith:
          labels:
            - merge(
            - )
        settings:
          deployment_name: ((var.deployment_name ))
          labels:
            - ((var.labels ))
            - ghpc_role: file-system
          local_mount: /projects
          network_id: ((module.network0.network_id ))
          project_id: ((var.project_id ))
          region: ((var.region ))
          zone: ((var.zone ))
        required_apis:
          $(vars.project_id):
            - file.googleapis.com
      - source: modules/scripts/startup-script
        kind: terraform
        id: script
        use: []
        wrapsettingswith:
          labels:
            - merge(
            - )
        outputs:
          - name: startup_script
            description: Automatically-generated output exported for use by later deployment groups
            sensitive: true
        settings:
          deployment_name: ((var.deployment_name ))
          labels:
            - ((var.labels ))
            - ghpc_role: scripts
          project_id: ((var.project_id ))
          region: ((var.region ))
          runners:
            - content: |
                #!/bin/bash
                echo "Hello, World!"
              destination: hello.sh
              type: shell
        required_apis:
          $(vars.project_id):
            - storage.googleapis.com
    kind: terraform
  - group: one
    terraform_backend:
      type: ""
      configuration: {}
    modules:
      - source: modules/packer/custom-image
        kind: packer
        id: image
        use:
          - network0
          - script
        wrapsettingswith: {}
        settings:
          deployment_name: ((var.deployment_name ))
          labels:
            ghpc_blueprint: igc
            ghpc_deployment: golden_copy_deployment
            ghpc_role: packer
          project_id: ((var.project_id ))
          startup_script: ((module.script.startup_script))
          subnetwork_name: ((module.network0.subnetwork_name))
          zone: ((var.zone ))
        required_apis:
          $(vars.project_id):
            - compute.googleapis.com
            - storage.googleapis.com
    kind: packer
terraform_backend_defaults:
  type: ""
  configuration: {}
