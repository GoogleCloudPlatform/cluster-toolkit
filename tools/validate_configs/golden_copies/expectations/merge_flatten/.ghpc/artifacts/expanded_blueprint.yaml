# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

blueprint_name: merge_flatten
ghpc_version: golden
validators:
  - validator: test_project_exists
    skip: true
  - validator: test_apis_enabled
    skip: true
  - validator: test_region_exists
    skip: true
  - validator: test_zone_exists
    skip: true
  - validator: test_zone_in_region
    skip: true
vars:
  deployment_name: golden_copy_deployment
  labels:
    ghpc_blueprint: merge_flatten
    ghpc_deployment: golden_copy_deployment
  project_id: invalid-project
  region: us-east4
  zone: us-east4-c
deployment_groups:
  - group: zero
    modules:
      - source: modules/network/vpc
        kind: terraform
        id: network
        settings:
          deployment_name: ((var.deployment_name ))
          project_id: ((var.project_id ))
          region: ((var.region ))
      - source: modules/file-system/filestore
        kind: terraform
        id: first-fs
        use:
          - network
        settings:
          deployment_name: ((var.deployment_name ))
          labels: ((var.labels ))
          local_mount: /first
          network_id: ((module.network.network_id ))
          project_id: ((var.project_id ))
          region: ((var.region ))
          zone: ((var.zone ))
      - source: modules/file-system/filestore
        kind: terraform
        id: second-fs
        use:
          - network
        settings:
          deployment_name: ((var.deployment_name ))
          labels: ((var.labels ))
          local_mount: /first
          network_id: ((module.network.network_id ))
          project_id: ((var.project_id ))
          region: ((var.region ))
          zone: ((var.zone ))
      - source: modules/compute/vm-instance
        kind: terraform
        id: first-vm
        use:
          - first-fs
        settings:
          deployment_name: ((var.deployment_name ))
          labels: |-
            ((merge(var.labels, {
              green = "sleeves"
            }) ))
          network_storage: ((flatten([module.first-fs.network_storage]) ))
          project_id: ((var.project_id ))
          region: ((var.region ))
          zone: ((var.zone ))
      - source: modules/compute/vm-instance
        kind: terraform
        id: second-vm
        use:
          - first-fs
          - second-fs
        settings:
          deployment_name: ((var.deployment_name ))
          labels: ((var.labels ))
          network_storage: ((flatten([module.second-fs.network_storage, flatten([module.first-fs.network_storage])]) ))
          project_id: ((var.project_id ))
          region: ((var.region ))
          zone: ((var.zone ))
