# Copyright 2025 "Google LLC"
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Assert variables are defined
  ansible.builtin.assert:
    that:
    - region is defined
    - deployment_name is defined
    - custom_vars.project is defined

- name: Get cluster credentials for kubectl
  delegate_to: localhost
  ansible.builtin.shell: |
    gcloud container clusters get-credentials {{ deployment_name }} --region {{ region }} --project {{ custom_vars.project }} --verbosity=debug

# --- Test Execution Block ---
- block:
  - name: Create a temporary copy of the NCCL test manifest
    delegate_to: localhost
    ansible.builtin.command: >
      cp {{ workspace }}/examples/gke-a3-ultragpu/nccl-jobset-example.yaml /tmp/nccl-jobset-test-{{ deployment_name }}.yaml

  - name: Modify NCCL test parameters in the temporary file
    delegate_to: localhost
    ansible.builtin.shell: |
      sed -i 's/parallelism: 4/parallelism: 2/' /tmp/nccl-jobset-test-{{ deployment_name }}.yaml
      sed -i 's/completions: 4/completions: 2/' /tmp/nccl-jobset-test-{{ deployment_name }}.yaml
      sed -i 's/ag-4-/ag-2-/'                   /tmp/nccl-jobset-test-{{ deployment_name }}.yaml
      sed -i 's/N_NODES=4/N_NODES=2/'           /tmp/nccl-jobset-test-{{ deployment_name }}.yaml
    args:
      executable: /bin/bash

  - name: Run the NCCL test using the temporary manifest
    delegate_to: localhost
    ansible.builtin.shell: |
      kubectl apply -f /tmp/nccl-jobset-test-{{ deployment_name }}.yaml

  - name: Wait for the JobSet to complete
    delegate_to: localhost
    ansible.builtin.shell: >
      kubectl get jobset ag-2 --namespace default -o jsonpath='{.status.conditions[?(@.type=="Completed")].status}'
    register: jobset_status
    until: jobset_status.stdout == "True"
    retries: 40 # 40 retries * 15s delay = 10 minutes timeout
    delay: 15
    changed_when: false

  - name: Fetch logs from the 0-0 pod and save to pod_logs.txt
    delegate_to: localhost
    ansible.builtin.shell: |
      pod_0_0_name="$(kubectl get pods --no-headers -o custom-columns="Name:.metadata.name" | awk '{if ($1 ~ "ag-2-" && $1 ~ "0-0") print $0}')"
      kubectl logs ${pod_0_0_name} > pod_logs.txt
    changed_when: true

  - name: Print the NCCL test logs from 0-0 pod
    delegate_to: localhost
    ansible.builtin.command: cat pod_logs.txt
    changed_when: false

  - name: Ensure average bus bandwidth is >= 100 GB/s
    delegate_to: localhost
    ansible.builtin.shell: |
      grep -o '# Avg bus bandwidth    : [0-9\.]*' pod_logs.txt | cut -d ':' -f 2 | awk '{$1=$1;print}'
    register: avg_bus_bandwidth
    failed_when: avg_bus_bandwidth.stdout | float < 100

# --- Cleanup Block (Always Runs) ---
- always:
  - name: Clean up the NCCL test JobSet using the temporary manifest
    delegate_to: localhost
    command: "kubectl delete -f /tmp/nccl-jobset-test-{{ deployment_name }}.yaml --ignore-not-found=true"
    changed_when: true

  - name: Wait up to 5 minutes for all test pods to be deleted
    delegate_to: localhost
    command: "kubectl wait --for=delete pod --all --namespace default --timeout=300s"
    changed_when: true
    ignore_errors: true # It's OK if there are no pods left to wait for

  - name: Pause for 120 seconds to allow GKE network interfaces to fully detach
    delegate_to: localhost
    pause:
      seconds: 120

  - name: Clean up the temporary manifest file
    delegate_to: localhost
    ansible.builtin.file:
      path: "/tmp/nccl-jobset-test-{{ deployment_name }}.yaml"
      state: absent

  - name: Pause for 30 seconds to allow the cluster to settle
    delegate_to: localhost
    pause:
      seconds: 30
