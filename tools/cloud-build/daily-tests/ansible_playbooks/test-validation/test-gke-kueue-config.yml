# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Kueue Configuration and Verification Tasks
  block:
  - name: Assert variables are defined
    ansible.builtin.assert:
      that:
      - region is defined
      - custom_vars.project is defined

  - name: Get cluster credentials for kubectl
    delegate_to: localhost
    ansible.builtin.command: gcloud container clusters get-credentials {{ deployment_name }} --region {{ region }} --project {{ custom_vars.project }} --verbosity=debug

  - name: Generate and Apply Kueue Configuration
    block:
    - name: Generate Kueue config using sed
      delegate_to: localhost
      ansible.builtin.shell: |
        TEMPLATE_PATH="{{ workspace }}/tools/cloud-build/daily-tests/blueprints/kueue-config-files/tas-queues-template.yaml"
        OUTPUT_PATH="/tmp/tas-queues-rendered-{{ accelerator_type }}.yaml"
        ACCELERATOR_TYPE_VAL="{{ accelerator_type }}"

        sed -e "s/__ACCELERATOR_TYPE__/${ACCELERATOR_TYPE_VAL}/g" \
            "${TEMPLATE_PATH}" > "${OUTPUT_PATH}"
      args:
        executable: /bin/bash
      changed_when: True

    - name: Create the topology kueue (using the rendered file)
      delegate_to: localhost
      ansible.builtin.shell: |
        KUEUE_CONFIG_PATH="/tmp/tas-queues-rendered-{{ accelerator_type }}.yaml"
        echo "Applying Kueue config from: ${KUEUE_CONFIG_PATH}"
        kubectl apply -f ${KUEUE_CONFIG_PATH} -v=9 || { echo "kubectl apply FAILED"; exit 1; }
        echo "kubectl apply command exited successfully."
      args:
        executable: /bin/bash
      changed_when: False

  - name: Create the host topology kueue job
    delegate_to: localhost
    ansible.builtin.shell: |
      array=({{ workspace }}/tools/cloud-build/daily-tests/blueprints/kueue-config-files/host-topology-tas-small-job.yaml)
      kubectl create -f ${array[0]} -v=9
      echo ${array[0]}
    args:
      executable: /bin/bash
    changed_when: False

  - name: Verify Kueue Topology gke-default exists with correct levels
    delegate_to: localhost
    ansible.builtin.shell: |
      # Get the YAML for the Topology and check for specific lines
      kubectl get topology gke-default -o yaml | grep -q -E "nodeLabel: cloud.google.com/gce-topology-block" &&
      kubectl get topology gke-default -o yaml | grep -q -E "nodeLabel: cloud.google.com/gce-topology-subblock" &&
      kubectl get topology gke-default -o yaml | grep -q -E "nodeLabel: cloud.google.com/gce-topology-host" &&
      kubectl get topology gke-default -o yaml | grep -q -E "nodeLabel: kubernetes.io/hostname"
    register: topology_validation
    until: topology_validation.rc == 0
    retries: 5
    delay: 5

  - name: Verify Kueue ResourceFlavor exists with correct properties
    delegate_to: localhost
    ansible.builtin.shell: |
      # Get the YAML for the ResourceFlavor and check for key properties
      kubectl get resourceflavor {{instance_type}} -o yaml | grep -q -E "topologyName: gke-default" &&
      kubectl get resourceflavor {{instance_type}} -o yaml | grep -q -E "cloud.google.com/gke-accelerator: {{ accelerator_type }}" &&
      kubectl get resourceflavor {{instance_type}} -o yaml | grep -q -E "key: nvidia.com/gpu"
    register: resourceflavor_validation
    until: resourceflavor_validation.rc == 0
    retries: 5
    delay: 5

  - name: Verify Kueue ClusterQueue exists with correct quota and covered resources
    delegate_to: localhost
    ansible.builtin.shell: |
      # Get the YAML for the ClusterQueue and check for key properties
      kubectl get clusterqueue {{instance_type}} -o yaml | grep -q -E "nominalQuota: \"{{ num_gpus }}\""
    register: clusterqueue_validation
    until: clusterqueue_validation.rc == 0
    retries: 5
    delay: 5

  - name: Verify Kueue LocalQueue {{instance_type}} exists and links to ClusterQueue
    delegate_to: localhost
    ansible.builtin.shell: |
      # Get the YAML for the LocalQueue and check its clusterQueue link
      kubectl get localqueue {{instance_type}} -n default -o yaml | grep -q -E "clusterQueue: {{instance_type}}"
    register: localqueue_validation
    until: localqueue_validation.rc == 0
    retries: 5
    delay: 5

  - name: Ensure all pods are on the same host
    delegate_to: localhost
    ansible.builtin.shell: |
      kubectl get pods -v=9 \
      -o custom-columns="Name:.metadata.name,Host:.spec.nodeSelector.cloud\.google\.com/gce-topology-host" | \
      sort -k2 | uniq -f 1 | wc -l
    register: unique_host_count
    until: unique_host_count.stdout | int == 2
    retries: 10
    delay: 10

  - name: Delete the host topology kueue job
    delegate_to: localhost
    ansible.builtin.shell: |
      kubectl delete --all jobs -v=9
    args:
      executable: /bin/bash
    changed_when: False

  - name: Create the rack topology kueue job
    delegate_to: localhost
    ansible.builtin.shell: |
      array=({{ workspace }}/tools/cloud-build/daily-tests/blueprints/kueue-config-files/rack-topology-tas-small-job.yaml)
      kubectl create -f ${array[0]} -v=9
      echo ${array[0]}
    args:
      executable: /bin/bash
    changed_when: False

  - name: Ensure all pods are on the same rack
    delegate_to: localhost
    ansible.builtin.shell: |
      kubectl get pods -v=9 \
      -o custom-columns="Name:.metadata.name,Host:.spec.nodeSelector.cloud\.google\.com/gce-topology-subblock" | \
      sort -k2 | uniq -f 1 | wc -l
    register: unique_host_count
    until: unique_host_count.stdout | int == 2
    retries: 10
    delay: 10

  - name: Delete the rack topology kueue job
    delegate_to: localhost
    ansible.builtin.shell: |
      kubectl delete --all jobs -v=9
    args:
      executable: /bin/bash
    changed_when: False

  - name: Create the block topology kueue job
    delegate_to: localhost
    ansible.builtin.shell: |
      array=({{ workspace }}/tools/cloud-build/daily-tests/blueprints/kueue-config-files/block-topology-tas-small-job.yaml)
      kubectl create -f ${array[0]} -v=9
      echo ${array[0]}
    args:
      executable: /bin/bash
    changed_when: False

  - name: Ensure all pods are on the same block
    delegate_to: localhost
    ansible.builtin.shell: |
      kubectl get pods -v=9 \
      -o custom-columns="Name:.metadata.name,Host:.spec.nodeSelector.cloud\.google\.com/gce-topology-block" | \
      sort -k2 | uniq -f 1 | wc -l
    register: unique_host_count
    until: unique_host_count.stdout | int == 2
    retries: 10
    delay: 10

  - name: Wait for job to complete
    delegate_to: localhost
    ansible.builtin.command: |
      kubectl get job --field-selector status.successful=2
    register: job_completion
    until: job_completion.stdout_lines | length > 1
    retries: 10
    delay: 5

  - name: Print job_completion debug output
    ansible.builtin.debug:
      var: job_completion.stdout_lines
  always:
  - name: Clean up temporary rendered Kueue config (always run)
    delegate_to: localhost
    ansible.builtin.file:
      path: "/tmp/tas-queues-rendered-{{ accelerator_type }}.yaml"
      state: absent
