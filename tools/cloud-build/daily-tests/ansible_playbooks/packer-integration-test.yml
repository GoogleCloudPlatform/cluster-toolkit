# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

- name: "Packer Integration test for HPC toolkit"
  hosts: localhost
  vars:
    scripts_dir: "{{ workspace }}/tools/cloud-build/daily-tests"
  tasks:
  ## Create Deployment
  - name: Create Deployment Directory
    command: "{{ scripts_dir }}/create_deployment.sh"
    environment:
      EXAMPLE_YAML: "{{ blueprint_yaml }}"
      PROJECT_ID: "{{ project }}"
      ROOT_DIR: "{{ workspace }}"
      BLUEPRINT_DIR: "{{ blueprint_dir }}"
      DEPLOYMENT_NAME: "{{ deployment_name }}"
    args:
      creates: "{{ workspace }}/{{ deployment_name }}.tgz"
  - name: Create Infrastructure and test
    block:
    - name: Create Network with Terraform
      command:
        cmd: "{{ item }}"
        chdir: "{{ workspace }}/{{ deployment_name }}/builder-env"
      args:
        creates: "{{ workspace }}/{{ deployment_name }}/.terraform"
      environment:
        TF_IN_AUTOMATION: "TRUE"
      with_items:
      - terraform init
      - terraform validate
      - terraform apply -auto-approve -no-color
    - name: Create VM image with Packer
      command:
        cmd: "{{ item }}"
        chdir: "{{ workspace }}/{{ deployment_name }}/packer/custom-image"
      with_items:
      - packer init .
      - packer validate .
      - packer build .
    - name: Delete VM Image
      ansible.builtin.shell: |
        gcloud compute images delete --project={{ project }} --quiet $(jq -r '.builds[-1].artifact_id' packer-manifest.json | cut -d ":" -f2)
      args:
        chdir: "{{ workspace }}/{{ deployment_name }}/packer/custom-image"
    ## Always cleanup network
    always:
    - name: Tear Down Network
      run_once: true
      delegate_to: localhost
      environment:
        TF_IN_AUTOMATION: "TRUE"
      command:
        cmd: terraform destroy -auto-approve -no-color
        chdir: "{{ workspace }}/{{ deployment_name }}/builder-env"
