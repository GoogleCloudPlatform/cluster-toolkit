# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

blueprint_name: lustre-new-vpc

vars:
  project_id:  ## Set GCP Project ID Here ##
  deployment_name: lustre-new-vpc
  region: us-west4
  zone: us-west4-c

deployment_groups:
- group: primary
  modules:
  # Source is an embedded module, denoted by "modules/*" without ./, ../, /
  # as a prefix. To refer to a local or community module, prefix with ./, ../ or /
  # Example - ./modules/network/pre-existing-vpc
  - id: network1
    source: modules/network/vpc

  - id: homefs
    source: modules/file-system/filestore
    use: [network1]
    settings:
      local_mount: /home

  - id: scratchfs
    source: community/modules/file-system/DDN-EXAScaler
    use: [network1]
    settings:
      local_mount: /scratch

  # these runners are no longer necessary, but it is important that we test it still works
  # even when added twice
  - id: mount-exascaler
    source: modules/scripts/startup-script
    settings:
      runners:
      - $(scratchfs.install_ddn_lustre_client_runner)
      - $(scratchfs.mount_runner)

  # Create a separate workstation to catch regressions in vm-instance
  - id: workstation
    source: ./modules/compute/vm-instance
    use:
    - network1
    - homefs
    - mount-exascaler
    settings:
      name_prefix: test-workstation1
      add_deployment_name_before_prefix: true
      machine_type: c2-standard-4

  - id: wait0
    source: ./community/modules/scripts/wait-for-startup
    settings:
      instance_name: $(workstation.name[0])

  # test installing lustre from pre-existing-network-storage
  - id: pre-fs
    source: modules/file-system/pre-existing-network-storage
    settings:
      server_ip: $(scratchfs.network_storage.server_ip)
      remote_mount: $(scratchfs.network_storage.remote_mount)
      local_mount: $(scratchfs.network_storage.local_mount)
      fs_type: $(scratchfs.network_storage.fs_type)

  - id: mount-exascaler-from-pre-existing
    source: modules/scripts/startup-script
    settings:
      runners:
      - $(pre-fs.client_install_runner)
      - $(pre-fs.mount_runner)

  - id: install-luster-from-pre-existing
    source: modules/compute/vm-instance
    use:
    - network1
    - mount-exascaler-from-pre-existing
    settings:
      name_prefix: test-workstation2
      add_deployment_name_before_prefix: false
      machine_type: n2-standard-4

  - id: wait1
    source: ./community/modules/scripts/wait-for-startup
    settings:
      instance_name: $(install-luster-from-pre-existing.name[0])

  - id: compute_partition
    source: ./community/modules/compute/SchedMD-slurm-on-gcp-partition
    use:
    - network1
    - homefs
    - scratchfs
    settings:
      max_node_count: 2
      partition_name: compute

  - id: slurm_controller
    source: community/modules/scheduler/SchedMD-slurm-on-gcp-controller
    use:
    - network1
    - homefs
    - scratchfs
    - compute_partition

  - id: slurm_login
    source: ./community/modules/scheduler/SchedMD-slurm-on-gcp-login-node
    use:
    - network1
    - homefs
    - scratchfs
    - slurm_controller
    settings:
      login_machine_type: n2-standard-4
